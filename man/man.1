.\"t
.\" Automatically generated by Pandoc 2.1.1
.\"
.TH "PANSI" "1" "February 15, 2018" "Pansi User Manual" ""
.hy
.SH NAME
.PP
pansi \- The print command for your ansi codes
.SH SYNOPSIS
.PP
pansi [\f[I]\-h|\[en]help\f[]]
.PD 0
.P
.PD
pansi \[en]color\-table
.PD 0
.P
.PD
pansi [\f[I]options\f[]] <\f[I]text\f[]> [[\f[I]options\f[]]
<\f[I]text\f[]>]\&...
.SH DESCRIPTION
.PP
Pansi prints text to the screen, similar to \f[C]printf\f[] or
\f[C]echo\f[], but with options to also include ANSI control commands,
setting the text colors, attributes, and controlling the cursor.
.PP
Pansi also provides a nice color table to show what text features are
available in the current terminal, and how the colors look.
.SH OPTIONS
.TP
.B \-h, \-\-help
Print a brief reminder help message
.RS
.RE
.TP
.B \-\-color\-table
Print out a nicely formatted table of available colors and attributes.
.RS
.RE
.TP
.B \-\-no\-restore
Prevent the defaults from being set at the end of the command.
By default the ANSI codes are cleared out at the end because typically
you just want to modify the text passed to it, but sometimes it's nice
to keep some of these settings around for subsequent text.
.RS
.RE
.TP
.B \-n, \-\-new\-line
Insert a newline after the command finishes.
By default no new line is inserted so that you can continue writing, and
potentially use pansi mid\-text.
.RS
.PP
This only occurs at the very end of the ${script_name} command, so if
you are using the chaining format the newline won't be inserted until
after everything.
.RE
.SS Attributes:
.TP
.B \-\-bold
Make text bold
.RS
.RE
.TP
.B \-\-faint, \-\-dim
Make text faint.
Kind of the opposite of \f[B]\[en]bold\f[]
.RS
.RE
.TP
.B \-\-italic
Make text italic
.RS
.RE
.TP
.B \-\-fraktur
Change text to fraktur [Not often supported]
.RS
.RE
.TP
.B \-\-underline
Make text underlined
.RS
.RE
.TP
.B \-\-double\-underline
Make text underlined twice! [Not often supported]
.RS
.RE
.TP
.B \-\-blink
Make text blink
.RS
.RE
.TP
.B \-\-reverse, \-\-inverse
Invert background and foreground colors
.RS
.RE
.TP
.B \-\-invisible, \-\-conceal
Make text hidden
.RS
.RE
.TP
.B \-\-strikethrough, \-\-crossedout
Make text crossed out
.RS
.RE
.TP
.B \-\-frame
Make text framed [Not often supported]
.RS
.RE
.TP
.B \-\-encircle
Make text encircled [Not often supported]
.RS
.RE
.TP
.B \-\-overline
Make text overlined [Not often supported]
.RS
.RE
.SS Colors:
.TP
.B \-\-fg <\f[I]colorname\f[]>[\f[I]\-intense\f[]]
Set the foreground text color to the specified \f[I]colorname\f[].
.RS
.PP
The color name options are: \f[I]black\f[], \f[I]red\f[],
\f[I]green\f[], \f[I]yelow\f[], \f[I]blue\f[], \f[I]magenta\f[],
\f[I]cyan\f[], and \f[I]white\f[].
.PP
Additionally you can get an alternate (lighter/brighter) color by
appending \[lq]\-intense\[rq] to the colorname.
.RE
.TP
.B \-\-default
Reset foreground text color to the terminal's default color
.RS
.RE
.SS Background Color:
.PP
All background colors except `default' can optionally have `\-intense'
appended to the end of the option.
Doing so will use the alternative (lighter/brighter) version of the
specified color.
.TP
.B \-\-bg <\f[I]colorname\f[]>[\f[I]\-intense\f[]]
Set the background text color to the specified \f[I]colorname\f[].
.RS
.PP
The color name options are: \f[I]black\f[], \f[I]red\f[],
\f[I]green\f[], \f[I]yelow\f[], \f[I]blue\f[], \f[I]magenta\f[],
\f[I]cyan\f[], and \f[I]white\f[].
.PP
Additionally you can get an alternate (lighter/brighter) color by
appending \[lq]\-intense\[rq] to the colorname.
.RE
.TP
.B \-\-bg\-default
Reset text background color to the terminal's default color
.RS
.RE
.SS Color Aliases:
.PP
For both foreground and background, there is a set of grey color
aliases, that map to the following colors:
.TP
.B grey, gray
Alias for \[lq]white\[rq]
.RS
.RE
.TP
.B dark\-grey, dark\-gray
Alias for \[lq]black\-intense\[rq]
.RS
.RE
.PP
Additionally there is an alternative way to call for the
\[lq]intense\[rq] colors, by prefixing the color name with either
\[lq]light\-\[rq] or \[lq]bright\-\[rq]
.PP
\f[B]\[en]fg\f[] light\-red, \f[B]\[en]fg\f[] bright\-red
.PD 0
.P
.PD
\f[B]\[en]bg\f[] light\-blue, \f[B]\[en]bg\f[] bright\-blue
.SS Cursor:
.PP
Optional number arguments on cursor options will default to \[lq]1\[rq]
.TP
.B \-\-up [\f[I]n\f[]]
Move cursor up by \[lq]n\[rq] rows
.RS
.RE
.TP
.B \-\-down [\f[I]n\f[]]
Move cursor down by \[lq]n\[rq] rows
.RS
.RE
.TP
.B \-\-forward, \-\-fwd, \-\-right [\f[I]n\f[]]
Move cursor forward by \[lq]n\[rq] columns
.RS
.RE
.TP
.B \-\-backward, \-\-back, \-\-left [\f[I]n\f[]]
Move cursor backward by \[lq]n\[rq] columns
.RS
.RE
.TP
.B \-\-next\-line, \-\-next\-row [\f[I]n\f[]]
Move cursor to the beginning of the line \[lq]n\[rq] rows down
.RS
.RE
.TP
.B \-\-prev\-line, \-\-prev\-row [\f[I]n\f[]]
Move cursor to the beginning of the line \[lq]n\[rq] rows up
.RS
.RE
.TP
.B \-\-row, \-\-line [\f[I]n\f[]]
Move cursor to the \[lq]n\[rq] row.
Not relative to current position
.RS
.RE
.TP
.B \-\-column, \-\-col [\f[I]n\f[]]
Move cursor to the \[lq]n\[rq] column.
Not relative to current position
.RS
.RE
.TP
.B \-\-position [[\f[I]row\f[]][\f[I],col\f[]]]
Move cursor to the specified \[lq]row\[rq] and \[lq]col\[rq].
Missing options default to \[lq]1\[rq], if ommitted completely it will
default to position \[lq]1,1\[rq]
.RS
.RE
.TP
.B \-\-tab\-forward, \-\-tab\-fwd, \-\-tab\-right [\f[I]n\f[]]
Move cursor forward \[lq]n\[rq] tab stops
.RS
.RE
.TP
.B \-\-tab\-backward, \-\-tab\-back, \-\-tab\-left [\f[I]n\f[]]
Move cursor backward \[lq]n\[rq] tab stops
.RS
.RE
.TP
.B \-\-save\-cursor
Saves the cursor position.
Restores the cursor after command finishes, unless
\[lq]\[en]no\-restore\[rq] is also used
.RS
.RE
.TP
.B \-\-restore\-cursor
Restore the cursor to it's saved position
.RS
.RE
.TP
.B \-\-hide\-cursor
Hide the cursor during command execution.
Cursor will be shown after the command finishes, unless
\[lq]\[en]no\-restore\[rq] is also used
.RS
.RE
.TP
.B \-\-show\-cursor
Show a cursor if hidden
.RS
.RE
.SS Display Manipulation:
.TP
.B \[en]insert\-chars [\f[I]n\f[]]
Insert blank characters, shifting the line right
.RS
.RE
.TP
.B \[en]erase\-chars [\f[I]n\f[]]
Erase \[lq]n\[rq] characters
.RS
.RE
.TP
.B \[en]repeat\-char [\f[I]n\f[]]
Repeat the last character \[lq]n\[rq] times
.RS
.RE
.TP
.B \[en]erase\-display [\f[I]mode\f[]]
Clears part of the screen according to \[lq]mode\[rq], cursor position
does not change:
.RS
.PP
.TS
tab(@);
rw(8.7n) lw(61.3n).
T{
Mode
T}@T{
Result
T}
_
T{
down, 0
T}@T{
From the cursor to the bottom of the screen (\f[B]Default\f[])
T}
T{
up, 1
T}@T{
From the cursor to the beginning of the screen
T}
T{
all, 2
T}@T{
Entire visible screen, sometimes placing the cursor in the upper left
corner
T}
T{
scroll, 3
T}@T{
Same as `all' but also clears the scrollback buffer
T}
.TE
.RE
.TP
.B \[en]erase\-line [\f[I]mode\f[]]
Erase part of the line according to the `mode', cursor position does not
change:
.RS
.PP
.TS
tab(@);
r l.
T{
Mode
T}@T{
Result
T}
_
T{
right, 0
T}@T{
From the cursor to the end of the line (\f[B]Default\f[])
T}
T{
left, 1
T}@T{
From the cursor to the beginning of the line
T}
T{
all, 2
T}@T{
The entire line
T}
.TE
.RE
.TP
.B \[en]delete\-lines [\f[I]n\f[]]
Erase \[lq]n\[rq] lines starting with current and moving up.
Lines below move up
.RS
.RE
.TP
.B \[en]insert\-lines [\f[I]n\f[]]
Add \[lq]n\[rq] blank lines above current.
The current line and below move down
.RS
.RE
.TP
.B \[en]scroll\-up [\f[I]n\f[]]
Entire display moved up, new lines added at bottom of screen
.RS
.RE
.TP
.B \[en]scroll\-down [\f[I]n\f[]]
Entire display moved down, new lines added at top of screen
.RS
.RE
.SS Resets:
.TP
.B \-\-reset\-foreground, \-\-reset\-fg
Reset foreground text color to the terminal's default color.
(Alias for \f[B]\[en]default\f[])
.RS
.RE
.TP
.B \-\-reset\-color
Reset foreground and background color to default.
.RS
.RE
.TP
.B \-\-reset\-text
Reset foreground, background, and attributes to default.
.RS
.RE
.TP
.B \-\-reset
Reset everything (color, attributes, and cursor)
.RS
.RE
.SH EXAMPLES
.PP
Print a installer progress message, with a bold blue arrow, then default
description text:
.IP
.nf
\f[C]
pansi\ \-\-fg\ blue\ \-\-bold\ "==>"\ \-\-reset\-text\ "\ Starting\ a\ new\ installation"
\f[]
.fi
.PP
Piping Pansi to other tools:
.IP
.nf
\f[C]
cat\ <<<\ "$(pansi\ \-\-underline\ "Holiday"):\ $(pansi\ \-\-fg\ bright\-green\ "St.\ Patrick\[aq]s\ Day")"
\f[]
.fi
.PP
Progress Indicator:
.IP
.nf
\f[C]
progress=0
meter_width=80
readout=$((\ ${meter_width}\ \-\ 3\ ))
fill_space=$((\ ${meter_width}\ \-\ 7\ ))

pansi\ \-\-no\-restore\ \-\-hide\-cursor\ \-\-bold\ "["\ \-\-forward\ ${fill_space}\ "]\ 0%"
while\ [[\ ${progress}\ \-le\ 100\ ]];\ do
\ \ pansi\ \-\-no\-restore\ \-\-column\ ${readout}\ \-\-erase\-line\ right\ "${progress}%"\ \-\-column\ 2

\ \ fill=$(printf\ "%.0f"\ $(bc\ \-l\ <<<\ "(${progress}\ /\ 100)\ *\ ${fill_space}"))
\ \ if\ [[\ ${fill}\ \-le\ 1\ ]];\ then
\ \ \ \ printf\ "%s"\ ">"
\ \ elif\ [[\ $progress\ \-lt\ 25\ ]];\ then
\ \ \ \ pansi\ \-\-no\-restore\ \-\-erase\-chars\ ${fill_space}\ "="\ \-\-repeat\-char\ $((\ ${fill}\-1\ ))\ ">"
\ \ elif\ [[\ $progress\ \-lt\ 50\ ]];\ then
\ \ \ \ pansi\ \-\-no\-restore\ \-\-erase\-chars\ ${fill_space}\ \-\-fg\ blue\ "="\ \-\-repeat\-char\ $((\ ${fill}\-1\ ))\ ">"
\ \ elif\ [[\ $progress\ \-lt\ 75\ ]];\ then
\ \ \ \ pansi\ \-\-no\-restore\ \-\-erase\-chars\ ${fill_space}\ \-\-fg\ cyan\ "="\ \-\-repeat\-char\ $((\ ${fill}\-1\ ))\ ">"
\ \ elif\ [[\ $progress\ \-lt\ 100\ ]];\ then
\ \ \ \ pansi\ \-\-no\-restore\ \-\-erase\-chars\ ${fill_space}\ \-\-fg\ green\ "="\ \-\-repeat\-char\ $((\ ${fill}\-1\ ))\ ">"
\ \ elif\ [[\ $progress\ \-eq\ 100\ ]];\ then
\ \ \ \ pansi\ \-\-newline\ \-\-col\ \-\-fg\ green\ "[="\ \-\-repeat\-char\ $((\ ${fill_space}\-1\ ))\ "]"
\ \ fi

\ \ sleep\ 0.01
\ \ ((\ progress++\ ))
done
\ \ \ \ 
\f[]
.fi
.SH AUTHORS
Logan Holmes.
